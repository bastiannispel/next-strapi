name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  master:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    environment: production
    steps:
      - uses: actions/checkout@v2
        name: Checkout [master]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'master'
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: npx nx affected --target=build --parallel=3
      - run: npx nx affected --target=test --parallel=3
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    environment: staging
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'master'
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=build --parallel=3
      - run: npx nx affected --target=test --parallel=3
